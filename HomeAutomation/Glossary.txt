Warning: Old, may not be accurate

Phrase - object that holds the original input text from dragon, and abilities to tag, clean, and sort.
	Tag - Simple object used to define the rawText in a phrase. EX: "Trigger" {Type/Value}
		Trigger - string that triggers a tag to be created
		Type - type of tag. EX: "PowerOption"
		Value - value of type. EX: "1"
	
InterpretationModule - a system designed to take a phrase,  and preform actions based on the phrase
	and data from the OD. Accepts advamced commands, such as: "How is it going walter?".
	When a phrase is recieved, each module is asked if the phrase applies to them.
	
InteractionModule - a system designed interact with the outside world (including hardware). Ex: WeatherModule
	contains tools to acces online forecasts,and variables such as currentTemp, condition, and humidity.
	These variables are often accesed by OD read and Write nodes.
	
Object Database (OD) - database of 'objects' aranged in a tree format. Includes things such as
	physical, lights, switches, and other devices. It also holds data, like the state of devices,
	and forecast temperature. It can be searches with varying degrees of specifity.
	
Device - An physical electronic unit connected to Walter via arduio. Ex: Sensor, motor, LED

OD Component - a part on the OD tree. Could be an object, node, or placeholder (like a folder)

OD Node - a part of the OD tree that can be set to a single value. Ex: LED, heater. All it
	contains is a refrence to where the data can be found/modified. Usualy these refrences will
	point to somewere in a DataModule. It can also be read, which works in the same way
	
? OD AdvancedNode - a node that can take a command in the form of a string, and then preform actions
	based on the sting. 
	Ex:
		RawText: "walter, rebuild the database"
		Tagged: "{object/self} {verb/rebuild} {object/database}"
		Result:	root/database/advancedNode.command("rebuild") is called
	
OD NodeBehaviour - a 'template' for a node's behaviour. Since a class cannot be created for each node
	at runtime (and it's unrelistic to do so in code), there are premade node behaivours available to use.
	Ex: [{Object} rooms > {Object} livingRoom > {Object} heater > {Node} power] can use the template
	'Device', with one parameter used to define the pin to use (the parameters can be defined in the OD
	orginization software).
	
	Each OD NodeBehaviour MUST have a setable/getable (depending on whether it's a read or write node)
	variable with the same name as the node. When the node is queried for data, the node passes the query
	onto it's behaviour.

IntentionDeterminer - A system that takes a phrase and determines it's intention. EX: ObjectDatabaseRQD,
	ObjectDatabaseCommand, etc... The IntentionDeterminer goes through each Determiner class, passing them
	each the phrase and checking for a claim. If a determiner claims a phrase, the ID executes the phrase on
	the found determiner.
	
	Determiner - Contains two methods. One that accepts a phrase, and returns true of false depending on
		weather the phrase applies to them or not. The other method executes the determiners function.
