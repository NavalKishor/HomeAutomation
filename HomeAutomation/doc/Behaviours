This document list the possible commands that can be used in behaviours

============================
========= Actions ========== 
============================

Speak
	Type name: "speak"
	
	Desciption:
		used the synthesis engine to speak
	
	Required elements:
		"speech" - text of what is to be spoken

Media Centre Command
	Type name: "media_centre_command"
	
	Switch element: "command"
		Play Track:
			Description:
				Plays a track using the MediaCentre class.
		
			Element text:
				"play_track"
			
			Required additional elements:
				"track"
				
			Optional additional elements:
				"artist"
			
			
		Enqueue Track:
			Description:
				Enqueues a track using the MediaCentre class.
				
			Element text:
				"enqueue_track"
			
			Required additional elements:
				"track"
				
			Optional additional elements:
				"artist"
				
				
		Play Random Track:
			Description:
				Plays a random track. If an artist is specified, the pool of tracks to choose from
				will shrink to those of the given artist. Uses the MediaCentre class
			
			Element text:
				"play_random_track"
				
			Optional additional elements:
				"artist"
				
				
		Set volume:
			Description:
				Sets the volume of your media player using the MediaCentre class. Note that this
				does not affect the operating system volume.
			
			Element text:
				"set_volume"
			
			Required additional elements:
				"set" - double >= 0 and <= 1
				
				
		Change Volume:
			Description:
				Changes the volume of your media player using the MediaCentre class. Note that this 
				does not affect the operating system volume.
			
			Element text:
				"change_volume"
			
			Required additional elements:
				"change" - double >= -1 and <= 1
				
		Playback:
			Description:
				Plays, pauses, and changes tracks, using the MediaCentre
				class.
			
			Element text:
				"playback"
			
			Required additional elements:
				"playback" - string "play", "pause", "next", or "back"
			

============================
========= Triggers =========
============================

Object Database Read
	Type name: "object_database_read"
	
	Switch element: "comparison"
		Integer greater than:
			Description:
				Compares an integer to the integer node of a database object
			
			Element text:
				"integer_greater_than"
			
			Required additional elements:
				"object_node" - path in the object database of an object's
					node
				"integer_greater_than" - integer
				
		
		Integer less than:
			Description:
				Compares an integer to the integer node of a database object
			
			Element text:
				"integer_less_than"
			
			Required additional elements:
				"object_node" - path in the object database of an object's
					node
				"integer_less_than" - integer

		
		Integer equals:
			Description:
				Compares an integer to the integer node of a database object
			
			Element text:
				"integer_equals"
			
			Required additional elements:
				"object_node" - path in the object database of an object's
					node
				"integer_equals" - integer
				
				
		Binary equals:
			Description:
				Compares a binary value to the integer node of a database
				object
			
			Element text:
				"binary_equals"
			
			Required additional elements:
				"object_node" - path in the object database of an object's
					node
				"binary_equals" - string "true" or "false"

		
		String equals:
			Description:
				Compares a string value to the integer node of a database
				object
			
			Element text:
				"string_equals"
			
			Required additional elements:
				"object_node" - path in the object database of an object's
					node
				"string_equals" - string


Time
	Type name: "time"
	
	Note:
		This behaviour will stay triggered for as long as the update period is
	
	Switch element: "parse_mode"
		Standard:
			Description:
				Date in standard from. To repeat, you can either use a standard mode with less large
				units, or a NLA mode with less large units. You can use restrictions to	ensure
				triggers only occur when you want (such as weekdays)
			
			Element text"
				"standard"
				
			Required additional elements:
				"time" - time in the form "yyyy-MM-dd-HH-mm-ss" (java.text.SimpleDateFormat) can
				also parse text with less largse units, causing a trigger every time the units
				match. Ex: "06-30-00" will trigger every day at 6:30. Remeber that you must inclide
				all units after the first defined one, you cannot use "dd-HH-mm".

		Natural Language:
			Description:
				Attempt to parse using the DateParser
			
			Element text"
				"natural_language"
				
			Required additional elements:
				"time" - time in a natural scentence
				
		Milliseconds:
			Description:
				Miliseconds from the epoch
			
			Element text"
				"milliseconds"
				
			Required additional elements:
				"time" - time milliseconds from epoch
				
	Optional Element: "restriction"
		Required additional attribute:
			"unit" -	"SECOND" | "MINUTE" | "HOUR" | "DAY" | "WEEK" | "MONTH" | "YEAR"
			"range" -	what of these units should enable the trigger. Ex: unit="WEEK" range=[2-5]
						would only trigger on  week days, not weekends. Denote ranges using regular
						expressions
